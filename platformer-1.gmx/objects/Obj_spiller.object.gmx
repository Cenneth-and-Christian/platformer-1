<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Spiller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DETTE ER EN TEST

G_grav = 0.2;
hojden_fart = 0;
bredden_fart = 0;
hoppe_fart = 7;
bevagelses_hastighed = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GET THE PLAYER INPUT

key_hojre = keyboard_check(vk_right);

key_venstre = -keyboard_check(vk_left);

key_hop = keyboard_check_pressed(vk_space);

//react to inputs

move = key_venstre + key_hojre;
bredden_fart = move * bevagelses_hastighed;

if (hojden_fart &lt; 10) vsp += G_grav;

if (place_meeting(x,y+1,obj_wall))
{
    hojden_fart = key_hop * -hoppe_fart
}
// horizontal collision
if (place_meeting(x+bredden_fart,y,obj_wall))
{
    while(!place_meeting(x+sign(bredden_fart),y,obj_wall))
    {
        x += sign(bredden_fart);
    }
    bredden_fart = 0;
}


// Vertical collision
if (place_meeting(x,y+hojden_fart,obj_wall))
{
    while(!place_meeting(x,y+sign(hojden_fart),obj_wall))
    {
        y += sign(hojden_fart);
    }
    hojden_fart = 0;
}
x += bredden_fart;
y += hojden_fart;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
